# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: develop
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.OPENAI_API_KEY}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install awscli -y
    - name: Configure AWS Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-west-2'
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set region $AWS_DEFAULT_REGION
    - name: Verify AWS CLI installation
      run: aws --version
    - name: Install poetry
      run: |
        python -m pip install poetry
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Lint with flake8
      run: |
        python -m poetry run python -m flake8
    - name: Test with pytest
      env:
        OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
        OPENAI_DEV_KEY: ${{secrets.OPENAI_DEV_KEY}}
        DBNAME: ${{secrets.DBNAME}}
        DBUSERNAME: ${{secrets.DBUSERNAME}}
        DBPASSWORD: ${{secrets.DBPASSWORD}}
        DBHOST: ${{secrets.DBHOST}}
        DBPORT: ${{secrets.DBPORT}}
      run: |
        python -m poetry run python -m pytest
